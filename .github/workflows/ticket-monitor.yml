name: Atmosphere Morrison Ticket Monitor

on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
    # Daily summary at 9 AM UTC (adjust timezone as needed)
    - cron: '0 9 * * *'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      run_type:
        description: 'Type of run'
        required: false
        default: 'alert'
        type: choice
        options:
          - alert
          - daily

jobs:
  monitor-tickets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
        
    - name: Determine run type
      id: run-type
      run: |
        if [ "${{ github.event_name }}" = "schedule" ]; then
          if [ "${{ github.event.schedule }}" = "0 9 * * *" ]; then
            echo "type=daily" >> $GITHUB_OUTPUT
          else
            echo "type=alert" >> $GITHUB_OUTPUT
          fi
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "type=${{ github.event.inputs.run_type }}" >> $GITHUB_OUTPUT
        else
          echo "type=alert" >> $GITHUB_OUTPUT
        fi
        
    - name: Run ticket monitor (alerts)
      if: steps.run-type.outputs.type == 'alert'
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        MAILERSEND_API_KEY: ${{ secrets.MAILERSEND_API_KEY }}
        MAILERSEND_FROM_EMAIL: ${{ secrets.MAILERSEND_FROM_EMAIL }}
        MAILERSEND_FROM_NAME: ${{ secrets.MAILERSEND_FROM_NAME }}
        SIMPLEPUSH_KEY: ${{ secrets.SIMPLEPUSH_KEY }}
      run: python premium_monitor.py
      
    - name: Run daily summary
      if: steps.run-type.outputs.type == 'daily'
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        MAILERSEND_API_KEY: ${{ secrets.MAILERSEND_API_KEY }}
        MAILERSEND_FROM_EMAIL: ${{ secrets.MAILERSEND_FROM_EMAIL }}
        MAILERSEND_FROM_NAME: ${{ secrets.MAILERSEND_FROM_NAME }}
        SIMPLEPUSH_KEY: ${{ secrets.SIMPLEPUSH_KEY }}
      run: python premium_monitor.py daily